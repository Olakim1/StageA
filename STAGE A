{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOfMz5hYBSz93qGmzW0XtiY"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"Oiy8KxdXQeVo","executionInfo":{"status":"ok","timestamp":1668968315471,"user_tz":-60,"elapsed":16,"user":{"displayName":"Olamibowale Kimberly Olaiya","userId":"16263606747661678337"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np"]},{"cell_type":"code","source":["#loading a dataset (csv file) from a url\n","#url=https://github.com/HamoyeHQ/HDSC-Introduction-to-python-for-machine-learning\n","df=pd.read_csv(\"https://github.com/HamoyeHQ/HDSC-Introduction-to-Python-for-machine-learning/files/7768140/FoodBalanceSheets_E_Africa_NOFLAG.csv\",encoding=\"latin_1\")\n","#previewing the first 5 records\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"c9gyd7KwQ0qy","executionInfo":{"status":"ok","timestamp":1668968539607,"user_tz":-60,"elapsed":1294,"user":{"displayName":"Olamibowale Kimberly Olaiya","userId":"16263606747661678337"}},"outputId":"a6315fda-9d19-41c7-fcdc-937a6d5bd94c"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Area Code     Area  Item Code         Item  Element Code  \\\n","0          4  Algeria       2501   Population           511   \n","1          4  Algeria       2501   Population          5301   \n","2          4  Algeria       2901  Grand Total           664   \n","3          4  Algeria       2901  Grand Total           674   \n","4          4  Algeria       2901  Grand Total           684   \n","\n","                                  Element             Unit     Y2014  \\\n","0           Total Population - Both sexes     1000 persons  38924.00   \n","1                Domestic supply quantity      1000 tonnes      0.00   \n","2           Food supply (kcal/capita/day)  kcal/capita/day   3377.00   \n","3  Protein supply quantity (g/capita/day)     g/capita/day     94.90   \n","4      Fat supply quantity (g/capita/day)     g/capita/day     80.06   \n","\n","      Y2015     Y2016     Y2017     Y2018  \n","0  39728.00  40551.00  41389.00  42228.00  \n","1      0.00      0.00      0.00      0.00  \n","2   3379.00   3372.00   3341.00   3322.00  \n","3     94.35     94.72     92.82     91.83  \n","4     79.36     77.40     80.19     77.28  "],"text/html":["\n","  <div id=\"df-15151299-afe8-4bd6-8f31-c91050746ecf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Area Code</th>\n","      <th>Area</th>\n","      <th>Item Code</th>\n","      <th>Item</th>\n","      <th>Element Code</th>\n","      <th>Element</th>\n","      <th>Unit</th>\n","      <th>Y2014</th>\n","      <th>Y2015</th>\n","      <th>Y2016</th>\n","      <th>Y2017</th>\n","      <th>Y2018</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4</td>\n","      <td>Algeria</td>\n","      <td>2501</td>\n","      <td>Population</td>\n","      <td>511</td>\n","      <td>Total Population - Both sexes</td>\n","      <td>1000 persons</td>\n","      <td>38924.00</td>\n","      <td>39728.00</td>\n","      <td>40551.00</td>\n","      <td>41389.00</td>\n","      <td>42228.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4</td>\n","      <td>Algeria</td>\n","      <td>2501</td>\n","      <td>Population</td>\n","      <td>5301</td>\n","      <td>Domestic supply quantity</td>\n","      <td>1000 tonnes</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>Algeria</td>\n","      <td>2901</td>\n","      <td>Grand Total</td>\n","      <td>664</td>\n","      <td>Food supply (kcal/capita/day)</td>\n","      <td>kcal/capita/day</td>\n","      <td>3377.00</td>\n","      <td>3379.00</td>\n","      <td>3372.00</td>\n","      <td>3341.00</td>\n","      <td>3322.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Algeria</td>\n","      <td>2901</td>\n","      <td>Grand Total</td>\n","      <td>674</td>\n","      <td>Protein supply quantity (g/capita/day)</td>\n","      <td>g/capita/day</td>\n","      <td>94.90</td>\n","      <td>94.35</td>\n","      <td>94.72</td>\n","      <td>92.82</td>\n","      <td>91.83</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Algeria</td>\n","      <td>2901</td>\n","      <td>Grand Total</td>\n","      <td>684</td>\n","      <td>Fat supply quantity (g/capita/day)</td>\n","      <td>g/capita/day</td>\n","      <td>80.06</td>\n","      <td>79.36</td>\n","      <td>77.40</td>\n","      <td>80.19</td>\n","      <td>77.28</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-15151299-afe8-4bd6-8f31-c91050746ecf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-15151299-afe8-4bd6-8f31-c91050746ecf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-15151299-afe8-4bd6-8f31-c91050746ecf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"HpWNXRL7Y9Hb","executionInfo":{"status":"ok","timestamp":1668970643416,"user_tz":-60,"elapsed":366,"user":{"displayName":"Olamibowale Kimberly Olaiya","userId":"16263606747661678337"}},"outputId":"b02bcde6-fbbd-407a-87eb-cd90482c495b"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Area Code      Area  Item Code           Item  Element Code  \\\n","60938        181  Zimbabwe       2899  Miscellaneous          5142   \n","60939        181  Zimbabwe       2899  Miscellaneous           645   \n","60940        181  Zimbabwe       2899  Miscellaneous           664   \n","60941        181  Zimbabwe       2899  Miscellaneous           674   \n","60942        181  Zimbabwe       2899  Miscellaneous           684   \n","\n","                                      Element             Unit  Y2014  Y2015  \\\n","60938                                    Food      1000 tonnes  42.00  46.00   \n","60939     Food supply quantity (kg/capita/yr)               kg   3.06   3.33   \n","60940           Food supply (kcal/capita/day)  kcal/capita/day   3.00   4.00   \n","60941  Protein supply quantity (g/capita/day)     g/capita/day   0.10   0.11   \n","60942      Fat supply quantity (g/capita/day)     g/capita/day   0.04   0.05   \n","\n","       Y2016  Y2017  Y2018  \n","60938  33.00  19.00  16.00  \n","60939   2.35   1.33   1.08  \n","60940   3.00   1.00   1.00  \n","60941   0.08   0.04   0.04  \n","60942   0.03   0.02   0.01  "],"text/html":["\n","  <div id=\"df-947adce3-bccf-4fed-a746-e431eae90f8b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Area Code</th>\n","      <th>Area</th>\n","      <th>Item Code</th>\n","      <th>Item</th>\n","      <th>Element Code</th>\n","      <th>Element</th>\n","      <th>Unit</th>\n","      <th>Y2014</th>\n","      <th>Y2015</th>\n","      <th>Y2016</th>\n","      <th>Y2017</th>\n","      <th>Y2018</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>60938</th>\n","      <td>181</td>\n","      <td>Zimbabwe</td>\n","      <td>2899</td>\n","      <td>Miscellaneous</td>\n","      <td>5142</td>\n","      <td>Food</td>\n","      <td>1000 tonnes</td>\n","      <td>42.00</td>\n","      <td>46.00</td>\n","      <td>33.00</td>\n","      <td>19.00</td>\n","      <td>16.00</td>\n","    </tr>\n","    <tr>\n","      <th>60939</th>\n","      <td>181</td>\n","      <td>Zimbabwe</td>\n","      <td>2899</td>\n","      <td>Miscellaneous</td>\n","      <td>645</td>\n","      <td>Food supply quantity (kg/capita/yr)</td>\n","      <td>kg</td>\n","      <td>3.06</td>\n","      <td>3.33</td>\n","      <td>2.35</td>\n","      <td>1.33</td>\n","      <td>1.08</td>\n","    </tr>\n","    <tr>\n","      <th>60940</th>\n","      <td>181</td>\n","      <td>Zimbabwe</td>\n","      <td>2899</td>\n","      <td>Miscellaneous</td>\n","      <td>664</td>\n","      <td>Food supply (kcal/capita/day)</td>\n","      <td>kcal/capita/day</td>\n","      <td>3.00</td>\n","      <td>4.00</td>\n","      <td>3.00</td>\n","      <td>1.00</td>\n","      <td>1.00</td>\n","    </tr>\n","    <tr>\n","      <th>60941</th>\n","      <td>181</td>\n","      <td>Zimbabwe</td>\n","      <td>2899</td>\n","      <td>Miscellaneous</td>\n","      <td>674</td>\n","      <td>Protein supply quantity (g/capita/day)</td>\n","      <td>g/capita/day</td>\n","      <td>0.10</td>\n","      <td>0.11</td>\n","      <td>0.08</td>\n","      <td>0.04</td>\n","      <td>0.04</td>\n","    </tr>\n","    <tr>\n","      <th>60942</th>\n","      <td>181</td>\n","      <td>Zimbabwe</td>\n","      <td>2899</td>\n","      <td>Miscellaneous</td>\n","      <td>684</td>\n","      <td>Fat supply quantity (g/capita/day)</td>\n","      <td>g/capita/day</td>\n","      <td>0.04</td>\n","      <td>0.05</td>\n","      <td>0.03</td>\n","      <td>0.02</td>\n","      <td>0.01</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-947adce3-bccf-4fed-a746-e431eae90f8b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-947adce3-bccf-4fed-a746-e431eae90f8b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-947adce3-bccf-4fed-a746-e431eae90f8b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df.groupby('Element')['Y2017'].sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E1eYHdAnx__c","executionInfo":{"status":"ok","timestamp":1668977862743,"user_tz":-60,"elapsed":389,"user":{"displayName":"Olamibowale Kimberly Olaiya","userId":"16263606747661678337"}},"outputId":"8752a2e7-a3f4-421d-f164-d037745d7037"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Element\n","Domestic supply quantity                  2088198.10\n","Export Quantity                            182338.80\n","Fat supply quantity (g/capita/day)          10253.84\n","Feed                                       223705.68\n","Food                                      1258888.28\n","Food supply (kcal/capita/day)              454681.00\n","Food supply quantity (kg/capita/yr)         48690.04\n","Import Quantity                            294559.09\n","Losses                                     160614.00\n","Other uses (non-food)                       91645.97\n","Processing                                 292836.00\n","Production                                2030056.89\n","Protein supply quantity (g/capita/day)      11842.45\n","Residuals                                   35500.00\n","Seed                                        24870.14\n","Stock Variation                             54316.91\n","Total Population - Both sexes             1112641.00\n","Tourist consumption                            91.00\n","Name: Y2017, dtype: float64"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["df.groupby('Area')['Area'].count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O9aaX-BEzgsX","executionInfo":{"status":"ok","timestamp":1668978568254,"user_tz":-60,"elapsed":363,"user":{"displayName":"Olamibowale Kimberly Olaiya","userId":"16263606747661678337"}},"outputId":"e39de0d6-db48-4eed-b7ea-dc14d0b90078"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Area\n","Algeria                        1313\n","Angola                         1424\n","Benin                          1285\n","Botswana                       1378\n","Burkina Faso                   1409\n","Cabo Verde                     1260\n","Cameroon                       1460\n","Central African Republic       1344\n","Chad                           1343\n","Comoros                          45\n","Congo                          1413\n","Côte d'Ivoire                  1467\n","Djibouti                       1095\n","Egypt                          1488\n","Eswatini                       1284\n","Ethiopia                       1447\n","Ethiopia PDR                     39\n","Gabon                          1245\n","Gambia                         1168\n","Ghana                          1354\n","Guinea                         1410\n","Guinea-Bissau                  1128\n","Kenya                          1560\n","Lesotho                        1150\n","Liberia                        1206\n","Madagascar                     1439\n","Malawi                         1447\n","Mali                           1293\n","Mauritania                     1195\n","Mauritius                      1378\n","Morocco                        1393\n","Mozambique                     1427\n","Namibia                        1283\n","Niger                          1403\n","Nigeria                        1474\n","Rwanda                         1426\n","Sao Tome and Principe          1177\n","Senegal                        1462\n","Seychelles                       68\n","Sierra Leone                   1242\n","South Africa                   1399\n","Sudan                          1316\n","Sudan (former)                   53\n","Togo                           1294\n","Tunisia                        1338\n","Uganda                         1458\n","United Republic of Tanzania    1419\n","Zambia                         1451\n","Zimbabwe                       1393\n","Name: Area, dtype: int64"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["df.groupby('Area')['Y2017'].min()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7aLXmbzx4OYi","executionInfo":{"status":"ok","timestamp":1668979300596,"user_tz":-60,"elapsed":1191,"user":{"displayName":"Olamibowale Kimberly Olaiya","userId":"16263606747661678337"}},"outputId":"00402f16-1426-4850-ed30-6ab0b0cf6ff0"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Area\n","Algeria                         -81.0\n","Angola                         -250.0\n","Benin                          -125.0\n","Botswana                        -38.0\n","Burkina Faso                   -281.0\n","Cabo Verde                       -7.0\n","Cameroon                       -147.0\n","Central African Republic         -1.0\n","Chad                            -37.0\n","Comoros                           0.0\n","Congo                            -4.0\n","Côte d'Ivoire                  -244.0\n","Djibouti                         -2.0\n","Egypt                         -1582.0\n","Eswatini                       -100.0\n","Ethiopia                       -792.0\n","Ethiopia PDR                      0.0\n","Gabon                           -37.0\n","Gambia                           -2.0\n","Ghana                          -121.0\n","Guinea                         -108.0\n","Guinea-Bissau                    -3.0\n","Kenya                          -186.0\n","Lesotho                          -4.0\n","Liberia                         -19.0\n","Madagascar                     -324.0\n","Malawi                          -50.0\n","Mali                           -600.0\n","Mauritania                       -1.0\n","Mauritius                       -25.0\n","Morocco                        -229.0\n","Mozambique                    -1200.0\n","Namibia                         -35.0\n","Niger                          -682.0\n","Nigeria                        -694.0\n","Rwanda                         -631.0\n","Sao Tome and Principe             0.0\n","Senegal                         -68.0\n","Seychelles                        0.0\n","Sierra Leone                   -180.0\n","South Africa                   -144.0\n","Sudan                          -819.0\n","Sudan (former)                    0.0\n","Togo                            -32.0\n","Tunisia                        -186.0\n","Uganda                         -180.0\n","United Republic of Tanzania    -865.0\n","Zambia                          -42.0\n","Zimbabwe                       -521.0\n","Name: Y2017, dtype: float64"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["my_tuppy=(1,2,5,8)\n","my_tuppy[2]=6"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":183},"id":"N-2PzZeb7AKO","executionInfo":{"status":"error","timestamp":1668979446499,"user_tz":-60,"elapsed":385,"user":{"displayName":"Olamibowale Kimberly Olaiya","userId":"16263606747661678337"}},"outputId":"40bb3fc8-d131-457c-b2d8-216baca14385"},"execution_count":46,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-46-887b1c276127>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mmy_tuppy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m8\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mmy_tuppy\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: 'tuple' object does not support item assignment"]}]},{"cell_type":"code","source":["df.groupby('Y2017')['Y2017'].mean()\n","df.groupby('Y2017')['Y2017'].std()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gqo9a7_P7Z1T","executionInfo":{"status":"ok","timestamp":1668979940808,"user_tz":-60,"elapsed":864,"user":{"displayName":"Olamibowale Kimberly Olaiya","userId":"16263606747661678337"}},"outputId":"b3c6b549-c5b9-4835-eb81-3bdd6f2a3d66"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Y2017\n","-1582.0      0.0\n","-1200.0      NaN\n","-1159.0      NaN\n","-865.0       NaN\n","-860.0       NaN\n","            ... \n"," 96443.0     NaN\n"," 106400.0    NaN\n"," 112625.0    NaN\n"," 117702.0    NaN\n"," 190873.0    NaN\n","Name: Y2017, Length: 4537, dtype: float64"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["df.groupby('Item')['Y2015'].sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tjkAcSb69S_w","executionInfo":{"status":"ok","timestamp":1668980086808,"user_tz":-60,"elapsed":3233,"user":{"displayName":"Olamibowale Kimberly Olaiya","userId":"16263606747661678337"}},"outputId":"d60623f5-67b9-4f58-9681-709bd041093c"},"execution_count":59,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Item\n","Alcohol, Non-Food        2180.00\n","Alcoholic Beverages     98783.72\n","Animal Products         11811.73\n","Animal fats            200675.72\n","Apples and products     10559.15\n","                         ...    \n","Vegetables, Other      158104.08\n","Vegetal Products       107064.17\n","Wheat and products     234710.51\n","Wine                     4251.81\n","Yams                   203151.78\n","Name: Y2015, Length: 119, dtype: float64"]},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["df.groupby('Area','Item')['Y2015'].sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":432},"id":"R7TAp7qc99Es","executionInfo":{"status":"error","timestamp":1668980564391,"user_tz":-60,"elapsed":474,"user":{"displayName":"Olamibowale Kimberly Olaiya","userId":"16263606747661678337"}},"outputId":"51e41fd8-c301-49dc-825e-a4c6098d2dbd"},"execution_count":65,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_get_axis_number\u001b[0;34m(cls, axis)\u001b[0m\n\u001b[1;32m    545\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 546\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mcls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_AXIS_TO_AXIS_NUMBER\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    547\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'Item'","\nDuring handling of the above exception, another exception occurred:\n","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-65-b55b1b506e7f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgroupby\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Area'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'Item'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Y2015'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mgroupby\u001b[0;34m(self, by, axis, level, as_index, sort, group_keys, squeeze, observed, dropna)\u001b[0m\n\u001b[1;32m   7625\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlevel\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mby\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   7626\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"You have to supply one of 'by' and 'level'\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 7627\u001b[0;31m         \u001b[0maxis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_axis_number\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   7628\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   7629\u001b[0m         \u001b[0;31m# error: Argument \"squeeze\" to \"DataFrameGroupBy\" has incompatible type\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_get_axis_number\u001b[0;34m(cls, axis)\u001b[0m\n\u001b[1;32m    546\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mcls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_AXIS_TO_AXIS_NUMBER\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    547\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 548\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"No axis named {axis} for object type {cls.__name__}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    549\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    550\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mfinal\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: No axis named Item for object type DataFrame"]}]},{"cell_type":"code","source":[],"metadata":{"id":"B_Y_7f9P_mMy"},"execution_count":null,"outputs":[]}]}